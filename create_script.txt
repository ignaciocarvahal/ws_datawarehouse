CREATE TABLE IF NOT EXISTS sla.caracteristicas_comerciales
(
    id_dim_caracteristicas integer NOT NULL,
    ejecutivo text COLLATE pg_catalog."default",
    ejecutivo_cuenta text COLLATE pg_catalog."default",
    comuna text COLLATE pg_catalog."default",
    chofer text COLLATE pg_catalog."default",
    estado_entrega text COLLATE pg_catalog."default",
    tipo_de_entrega text COLLATE pg_catalog."default",
    bodega_recepcion text COLLATE pg_catalog."default",
    nombre_nave text COLLATE pg_catalog."default",
    aforo text COLLATE pg_catalog."default",
    estado_despacho text COLLATE pg_catalog."default",
    CONSTRAINT caracteristicas_comerciales_pkey PRIMARY KEY (id_dim_caracteristicas)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS sla.caracteristicas_comerciales
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS sla.cliente
(
    id_dim_cliente integer NOT NULL,
    n_carpeta text COLLATE pg_catalog."default",
    fecha_creacion_cliente date,
    razon_social_cliente text COLLATE pg_catalog."default",
    ejecutivo text COLLATE pg_catalog."default",
    ejecutivo_cuenta text COLLATE pg_catalog."default",
    id_cliente text COLLATE pg_catalog."default",
    CONSTRAINT cliente_pkey PRIMARY KEY (id_dim_cliente)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS sla.cliente
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS sla.contenedor
(
    id_dim_contenedor integer NOT NULL,
    n_carpeta text COLLATE pg_catalog."default",
    n_contenedor text COLLATE pg_catalog."default",
    direccion_entrega text COLLATE pg_catalog."default",
    comuna text COLLATE pg_catalog."default",
    CONSTRAINT "Contenedor_pkey" PRIMARY KEY (id_dim_contenedor)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS sla.contenedor
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS sla.finanzas
(
    id_dim_finanzas integer NOT NULL,
    proforma_id text COLLATE pg_catalog."default",
    n_carpeta text COLLATE pg_catalog."default",
    estado_finanzas text COLLATE pg_catalog."default",
    fecha_de_pago date,
    CONSTRAINT finanzas_pkey PRIMARY KEY (id_dim_finanzas)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS sla.finanzas
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS sla.hitos
(
    id_dim_hitos integer NOT NULL,
    fecha_ultima_recepcion date,
    fecha_ultima_carga_documentos date,
    fecha_cierre_consolidado_comercial date,
    fecha_aprobacion_documentos date,
    fecha_consolidado_contenedor date,
    etd_nave_asignada date,
    eta date,
    fecha_publicacion date,
    fecha_aforo date,
    fecha_publicacion_aforo date,
    fecha_retiro_puerto date,
    fecha_retiro date,
    fecha_desconsolidacion_pudahuel date,
    fecha_de_pago date,
    fecha_solicitud_despacho date,
    fecha_prog_despacho date,
    fecha_entrega_retiro date,
    CONSTRAINT hitos_pkey PRIMARY KEY (id_dim_hitos)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS sla.hitos
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS sla.proveedor
(
    id_dim_proveedor integer NOT NULL,
    id_proveedor text COLLATE pg_catalog."default",
    n_carpeta text COLLATE pg_catalog."default",
    nombre_proveedor text COLLATE pg_catalog."default",
    fecha_creacion_proveedor date,
    CONSTRAINT proveedor_pkey PRIMARY KEY (id_dim_proveedor)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS sla.proveedor
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS sla.tracking
(
    id_dim_tracking integer NOT NULL,
    tracking_id text COLLATE pg_catalog."default",
    n_carpeta text COLLATE pg_catalog."default",
    m3_recibidos numeric,
    bultos_recepcionados numeric,
    m3_esperados numeric,
    peso_esperado numeric,
    bultos_esperados numeric,
    CONSTRAINT tracking_pkey PRIMARY KEY (id_dim_tracking)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS sla.tracking
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS sla.fact_servicio
(
    id_servicio integer NOT NULL,
    fecha_creacion_consolidado_comercial date,
    id_dim_contenedor integer,
    id_dim_finanzas integer,
    n_carpeta text COLLATE pg_catalog."default",
    id_consolidado_comercial text COLLATE pg_catalog."default",
    id_dim_hitos integer,
    id_dim_proveedor integer,
    id_dim_tracking integer,
    id_dim_caracteristicas integer,
    CONSTRAINT fact_servicio_pkey PRIMARY KEY (id_servicio),
    CONSTRAINT fk_caracteristicas FOREIGN KEY (id_dim_caracteristicas)
        REFERENCES sla.caracteristicas_comerciales (id_dim_caracteristicas) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT fk_contenedor FOREIGN KEY (id_dim_contenedor)
        REFERENCES sla.contenedor (id_dim_contenedor) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_finanzas FOREIGN KEY (id_dim_finanzas)
        REFERENCES sla.finanzas (id_dim_finanzas) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_hitos FOREIGN KEY (id_dim_hitos)
        REFERENCES sla.hitos (id_dim_hitos) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_proveedor FOREIGN KEY (id_dim_proveedor)
        REFERENCES sla.proveedor (id_dim_proveedor) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_tracking FOREIGN KEY (id_dim_tracking)
        REFERENCES sla.tracking (id_dim_tracking) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS sla.fact_servicio
    OWNER to postgres;

CREATE TABLE IF NOT EXISTS sla.fact_carpeta
(
    id_fact_carpeta integer NOT NULL,
    sla_1 numeric,
    sla_2 numeric,
    sla_3 numeric,
    id_dim_cliente integer,
    sla_4 numeric,
    sla_5 numeric,
    sla_6 numeric,
    sla_7 numeric,
    sla_8 numeric,
    sla_10 numeric,
    sla_11 numeric,
    n_carpeta text COLLATE pg_catalog."default",
    CONSTRAINT " fact_carpeta_pkey" PRIMARY KEY (id_fact_carpeta),
    CONSTRAINT fk_cliente FOREIGN KEY (id_dim_cliente)
        REFERENCES sla.cliente (id_dim_cliente) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS sla.fact_carpeta
    OWNER to postgres;